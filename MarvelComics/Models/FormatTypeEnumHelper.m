//
//  FormatTypeEnum.h
//  MarvelComics
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 05/25/2016
//
#include "FormatTypeEnumHelper.h"

/**
* Helper class implementation for FormatTypeEnum to NSString conversion
*/
@implementation FormatTypeEnumHelper

+(id) stringFromFormatTypeEnum:(enum FormatTypeEnum) formatTypeEnum withDefault: (id) defaultValue
{
    switch(formatTypeEnum)
    {
        case FormatTypeEnumCollection:
            return @"collection";

        case FormatTypeEnumComic:
            return @"comic";

        default:
            return defaultValue;
    }
}

+(NSArray<NSString*>*) stringArrayFromFormatTypeEnumArray:(NSArray<NSNumber*>*) array
{
	NSMutableArray* enums = [[NSMutableArray alloc]init]; 
	for(NSNumber* numberValue in array){
		NSNumber* stringValue = [FormatTypeEnumHelper stringFromFormatTypeEnum:(enum FormatTypeEnum) numberValue.intValue withDefault:[NSNull null]];
		[enums addObject:stringValue];
	}
	return [enums copy];
}

+(enum FormatTypeEnum) formatTypeEnumFromString:(NSString*) strValue
{
    NSArray* FormatTypeEnumArray = [NSArray arrayWithObjects:
                                        @"collection",
                                        @"comic",
                                        nil];

    return (enum FormatTypeEnum) [FormatTypeEnumArray indexOfObject: strValue];
}


+(NSArray<NSNumber*>*) formatTypeEnumArrayFromStringArray:(NSArray<NSString*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
	for(NSString* enumValue in array){
		NSNumber* numberValue = [NSNumber numberWithInt:[ FormatTypeEnumHelper formatTypeEnumFromString:enumValue]];
		[enums addObject:numberValue];
	}
	return [enums copy];
}

@end