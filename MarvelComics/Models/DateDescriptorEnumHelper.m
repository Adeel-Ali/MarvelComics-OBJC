//
//  DateDescriptorEnum.h
//  MarvelComics
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 05/25/2016
//
#include "DateDescriptorEnumHelper.h"

/**
* Helper class implementation for DateDescriptorEnum to NSString conversion
*/
@implementation DateDescriptorEnumHelper

+(id) stringFromDateDescriptorEnum:(enum DateDescriptorEnum) dateDescriptorEnum withDefault: (id) defaultValue
{
    switch(dateDescriptorEnum)
    {
        case DateDescriptorEnumLastWeek:
            return @"lastWeek";

        case DateDescriptorEnumNextWeek:
            return @"nextWeek";

        case DateDescriptorEnumThisMonth:
            return @"thisMonth";

        case DateDescriptorEnumThisWeek:
            return @"thisWeek";

        default:
            return defaultValue;
    }
}

+(NSArray<NSString*>*) stringArrayFromDateDescriptorEnumArray:(NSArray<NSNumber*>*) array
{
	NSMutableArray* enums = [[NSMutableArray alloc]init]; 
	for(NSNumber* numberValue in array){
		NSNumber* stringValue = [DateDescriptorEnumHelper stringFromDateDescriptorEnum:(enum DateDescriptorEnum) numberValue.intValue withDefault:[NSNull null]];
		[enums addObject:stringValue];
	}
	return [enums copy];
}

+(enum DateDescriptorEnum) dateDescriptorEnumFromString:(NSString*) strValue
{
    NSArray* DateDescriptorEnumArray = [NSArray arrayWithObjects:
                                        @"lastWeek",
                                        @"nextWeek",
                                        @"thisMonth",
                                        @"thisWeek",
                                        nil];

    return (enum DateDescriptorEnum) [DateDescriptorEnumArray indexOfObject: strValue];
}


+(NSArray<NSNumber*>*) dateDescriptorEnumArrayFromStringArray:(NSArray<NSString*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
	for(NSString* enumValue in array){
		NSNumber* numberValue = [NSNumber numberWithInt:[ DateDescriptorEnumHelper dateDescriptorEnumFromString:enumValue]];
		[enums addObject:numberValue];
	}
	return [enums copy];
}

@end